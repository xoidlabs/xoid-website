(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{60:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return d}));var r=n(2),c=n(6),o=(n(0),n(94)),a=["components"],i={id:"using-reducers",title:"Using reducers"},s={unversionedId:"recipes/using-reducers",id:"recipes/using-reducers",isDocsHomePage:!1,title:"Using reducers",description:"xoid doesn't need reducers, but if you prefer to use them, or if you're moving away from Redux, but want to reuse your existing reducers, you can easily do that with xoid.",source:"@site/main/docs/recipes/using-reducers.md",slug:"/recipes/using-reducers",permalink:"/docs/recipes/using-reducers",editUrl:"https://github.com/xoidlabs/xoid/blob/main/docs/recipes/using-reducers.md",version:"current",sidebar:"docs",previous:{title:"Using immer",permalink:"/docs/recipes/using-immer"},next:{title:"Using in an existing Redux App",permalink:"/docs/recipes/redux-interop"}},u=[],p={rightToc:u};function d(e){var t=e.components,n=Object(c.a)(e,a);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"xoid")," doesn't need reducers, but if you prefer to use them, or if you're moving away from Redux, but want to reuse your existing reducers, you can easily do that with ",Object(o.b)("strong",{parentName:"p"},"xoid"),". "),Object(o.b)("p",null,"The following function can be used to create a Redux-like atom."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const createStore = (reducer, state) => {\n  const atom = create(state)\n  const dispatch = (action) => atom.update((s) => reducer(s, action))\n  return { atom, dispatch }\n}\n")),Object(o.b)("p",null,"Let's take this simple reducer:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'const types = { increase: "INCREASE", decrease: "DECREASE" }\n\nconst counterReducer = (state, { type, by }) => {\n  switch (type) {\n    case types.increase: return {\n      ...state,\n      count: state.count + by \n    }\n    case types.decrease: return {\n      ...state,\n      count: state.count - by\n    }\n  }\n}\n')),Object(o.b)("p",null,"Usage:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const { atom, dispatch } = createStore({ count: 0 }, counterReducer)\n\ndispatch({ type: types.increase, by: 1 })\n")),Object(o.b)("p",null,"Connecting existing reducers to ",Object(o.b)("strong",{parentName:"p"},"xoid")," can be beneficial, especially if you're planning to gradually refactor your reducers. The above reducer can be simplified into to the following:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const CounterModel = (state) => create(state, (atom) => {\n  const $count = atom.focus('count')\n  return {\n    increment: (by) => $count.update(s => s + by),\n    decrement: (by) => $count.update(s => s - by),\n  }\n})\n")),Object(o.b)("p",null,"To see another demonstration with a more dramatic refactor, you can check ",Object(o.b)("a",{parentName:"p",href:"nested-state"},"Working with nested state")),Object(o.b)("p",null,"Related: ",Object(o.b)("a",{parentName:"p",href:"redux-interop"},"Using in an existing Redux App")))}d.isMDXComponent=!0},94:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),c=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var u=c.a.createContext({}),p=function(e){var t=c.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return c.a.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},b=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(a,".").concat(b)]||d[b]||l[b]||o;return n?c.a.createElement(m,i(i({ref:t},u),{},{components:n})):c.a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var u=2;u<o;u++)a[u]=n[u];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);