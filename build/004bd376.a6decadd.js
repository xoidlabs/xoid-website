(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{58:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),o=(n(0),n(93)),c=["components"],i={id:"advanced-concepts",title:"Advanced concepts"},s={unversionedId:"advanced-concepts",id:"advanced-concepts",isDocsHomePage:!1,title:"Advanced concepts",description:"Deriving state from external sources",source:"@site/main/docs/advanced-concepts.md",slug:"/advanced-concepts",permalink:"/docs/advanced-concepts",editUrl:"https://github.com/xoidlabs/xoid/blob/main/docs/advanced-concepts.md",version:"current",sidebar:"docs",previous:{title:"Streams",permalink:"/docs/streams"},next:{title:"Introduction",permalink:"/docs/framework-integrations/introduction"}},d=[{value:"Deriving state from external sources",id:"deriving-state-from-external-sources",children:[]},{value:"Enhanced atoms",id:"enhanced-atoms",children:[]}],p={rightToc:d},u="wrapper";function l(e){var t=e.components,n=Object(a.a)(e,c);return Object(o.b)(u,Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"deriving-state-from-external-sources"},"Deriving state from external sources"),Object(o.b)("p",null,"With an additional overload of the ",Object(o.b)("inlineCode",{parentName:"p"},"read")," function, you can consume external (non-",Object(o.b)("strong",{parentName:"p"},"xoid"),") sources. This can be a Redux store, an RxJS observable, or anything that implements getState & subscribe pair. Here is an atom that derives its state from a Redux store:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import store from './reduxStore'\n\nconst derivedAtom = create((read) => read(store.getState, store.subscribe))\n")),Object(o.b)("p",null,"As long as the external source implements a getState & subscribe, pair, it can be consumed by ",Object(o.b)("strong",{parentName:"p"},"xoid"),"."),Object(o.b)("h2",{id:"enhanced-atoms"},"Enhanced atoms"),Object(o.b)("p",null,"An enhanced atom is an atom whose default ",Object(o.b)("inlineCode",{parentName:"p"},".set"),' method is swapped with something else. This technique can be used to create "pass through atoms" that act as a mediators. Most people using ',Object(o.b)("strong",{parentName:"p"},"xoid")," will not need to write enhanced atoms.\nThis naming is inspired by Redux's concept of enhancers. For a real-life scenario, see ",Object(o.b)("a",{parentName:"p",href:"recipes/redux-interop"},"Using in an existing Redux App"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import store from './reduxStore'\n\nconst $mediator = create((read) => read(store.getState, store.subscribe))\n\n// we swap the default`.set` method\n$mediator.set = (value: number) => store.dispatch({ type: 'ACTION', payload: value })\n\n$mediator.update(s => s + 1) // modifications to `$mediator` will be directly forwarded to Redux dispatch.\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Swapping ",Object(o.b)("inlineCode",{parentName:"p"},".set")," also modifies the behavior of ",Object(o.b)("inlineCode",{parentName:"p"},".update"),", because it uses ",Object(o.b)("inlineCode",{parentName:"p"},".set")," internally. This is an intentional feature.")))}l.isMDXComponent=!0},93:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),p=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},l="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),l=r,m=u["".concat(c,".").concat(l)]||u[l]||b[l]||o;return n?a.a.createElement(m,i(i({ref:t},d),{},{components:n})):a.a.createElement(m,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[l]="string"==typeof e?e:r,c[1]=i;for(var d=2;d<o;d++)c[d]=n[d];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);