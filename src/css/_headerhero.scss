// Config ----------------------------------

$spinner-size: 250px;                 // 200px
$spinner-thickness: 14px;              // 4px
$spinner-speed: 1.2s;                 // 1.2s
$spinner-background: hsla(0,0%,100%,.27) ;               //hsla(0,0%,100%,.1)

$spinner-3d: true;                    // true
$spinner-loops: infinite;             // infinite (be careful, save the batteries!)
.HeaderHero {
.mask-container {
     -webkit-mask:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none"><polygon fill-rule="evenodd" points="100 0, 100 100, 0 100, 0 0, 20 0, 0 20, 30 50, 0 80, 20 100, 50 70, 80 100, 100 80, 70 50, 100 20, 80 0, 50 30, 20 0" fill="black"/></svg>') 0/100% 100%;
        mask:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none"><polygon fill-rule="evenodd" points="100 0, 100 100, 0 100, 0 0, 20 0, 0 20, 30 50, 0 80, 20 100, 50 70, 80 100, 100 80, 70 50, 100 20, 80 0, 50 30, 20 0" fill="black"/></svg>') 0/100% 100%;
}

.pencil-container {
 position: absolute;
 top: -1px;
 left: 1px;
 width: 260px;
 display: flex;
 align-items: center;
 justify-content: center;
 height: 260px;
}

// Spinner ----------------------------------

.spinner {
  position: relative;
  margin: auto;
  box-sizing: border-box;
  background-clip: padding-box;
  width: $spinner-size;
  height: $spinner-size;
  border-radius: calc( $spinner-size / 2 );
  border: $spinner-thickness solid $spinner-background;
  @if ($spinner-3d) {
    // mask smoothens out the anti-aliasing artifacts in the back. 
    -webkit-mask: linear-gradient(hsla(0,0%,0%,.1), hsla(0,0%,0%,1)  90% );
    transform-origin: 50% 60%;
    transform: perspective($spinner-size) rotateX(76deg);
    animation: spinner-wiggle $spinner-speed $spinner-loops;
  }
  
}

@keyframes spinner-wiggle {
  30% { transform: perspective($spinner-size) rotateX(76deg); }
  40% { transform: perspective($spinner-size) rotateX(75deg); }
  50% { transform: perspective($spinner-size) rotateX(78deg); }
  60% { transform: perspective($spinner-size) rotateX(74deg); }
}


.spinner:before,
.spinner:after {
  content: "";
  position: absolute;
  margin: -$spinner-thickness;
  box-sizing: inherit;
  width: inherit;
  height: inherit;
  border-radius: inherit;
  opacity: .05;
  border: inherit;
  border-color: transparent;
  animation: spinner-spin $spinner-speed cubic-bezier(.6,.2,0,.8) $spinner-loops,
             spinner-fade $spinner-speed linear $spinner-loops;
  
}

.spinner:before {
  border-top-color: hsl(190,100%,70%);
}

.spinner:after {
  border-top-color: #b475f0;
  animation-delay: $spinner-speed * 0.25;
}

.delay.spinner:before {
  border-top-color: hsl(190,100%,70%);
  animation-delay: $spinner-speed * 0.50;
}

.delay.spinner:after {
  animation-delay: $spinner-speed * 0.25;
}

@keyframes spinner-spin {
  100% { transform: rotate(360deg); }
}

@keyframes spinner-fade {
  20% { opacity: .1; }
  40% { opacity: 1; }
  60% { opacity: .1; }
}

.outer-container {
  overflow: hidden; position: relative; transform: scale(0.9); 
}

@media only screen and (max-width: 760px) {
  .outer-container {
    transform: scale(0.85);
  }
}

@media only screen and (max-width: 600px) {
  .outer-container {
    transform: scale(0.8);
  }
}
}



html[data-theme="light"] {
  .HeaderHero .delay.spinner:before {
    border-top-color: hsl(0, 0%, 100%);
  }
}